<?xml version='1.0' standalone='yes'?>
<?xml-stylesheet type="text/xsl" href="index.xsl" ?>
<topic title="Adjusting colors">
  <p>
    
  </p>
  <h2>Checking the colors on physical hardware</h2>
  <p>
    To tune the colors in the emulator to match physical hardware, it is best to run a program to
    display the full 256 color palette produced by GTIA. There are many such programs available, but
    for emulator color tuning, the <tt>colormap.xex</tt> utility on the
    <a href="additions.html">Additions disk</a> is recommended. You can either boot the additions
    disk image or extract the program and boot it directly with an SIO2PC device, which allows the
    computer to run a program or boot off an emulated disk drive from the PC.
  </p>
  <p>
    When the color map tool is run, it will generate a display like this (simulated NTSC example):
  </p>
  <img src="pics/colormap.jpg" />
  <p>
    The Adjust Colors dialog will also display the 256 colors, but you may find it easier to
    run <tt>colormap.xex</tt> within the emulator as well.
  </p>
  <h3>The color map</h3>
  <p>
    The color table section on the right displays all 256 colors that can be produced by the GTIA
    chip. The hue values are labeled on the left, with each row being a different hue; hue 0 at the top
    is grayscale with no color. Labeled on the bottom are the luma values, with each color having
    the same luma value. The labels are in hexadecimal, where A-F are 10 through 15.
  </p>
  <p>
    In BASIC, the hue and luma are the second and third values passed to the <tt>SETCOLOR</tt> statement.
    For instance, the typical bluish background of the <tt>GRAPHICS 0</tt> screen is <tt>SETCOLOR 2,9,4</tt>,
    shown here by the row labeled 9 on the left and the column labeled 4 at the bottom.
  </p>
  <p>
    Row 1 is intentionally repeated from the top of the chart back to the bottom to make it easier to
    calibrate for specific hue settings (as will be described in more detail below).
  </p>
  <p>
    There are a few rare cases where the color table may display differently:
  </p>
  <ul>
    <li>
      The computer has a CTIA chip. These are rare and only found in old 800 computers, not XL/XE
      models. On a CTIA system, only 8 luminances and 128 colors are displayed.
    </li>
    <li>
      The computer is a SECAM model with an FGTIA chip. These are extremely rare. The color table
      will only show 8 lumas and 128 colors with an FGTIA.
    </li>
    <li>
      The GTIA chip is defective. Some late XL/XE models have a defective GTIA chip that incorrectly
      displays some GTIA modes, including the GTIA 9 mode used here.
    </li>
  </ul>
  <h3>Artifacting</h3>
  <p>
    The area on the left shows the colors produced by <i>artifacting</i>, the use of alternating bright
    and dark pixels to produce a color signal for the display. For NTSC, this gives another set of
    colors that need to be tuned. This area is not useful for PAL displays.
  </p>
  <p>
    The top row displays the "classic" artifacting colors produced by alternating white and black
    pixels. These are the colors referred to when people mention "purple/green" and "red/blue"
    artifacting. The other rows below it are artifacting colors produced by also mixing hues into
    the pattern. These are less common but do occur in some software. They are also generally very
    sensitive to adjustments and are useful for fine tuning the color calibration.
  </p>
  <p>
    In the emulator, this will only show colors if one of the artifacting modes is enabled in the
    video options. Otherwise, it will show the raw pixels as uncolored stripes. Artifacted colors
    will also be absent on physical hardware if an S-Video or SCART video connection is being used.
  </p>
  <h2>Tuning procedure</h2>
  <p>
    Below is a procedure to adjust the colors generated by the hardware, displayed by the TV, or
    generated by the emulator. In Altirra, the Adjust Colors dialog accessible from the View menu
    is used to tune the emulator's color palette generation.
  </p>
  <h3>A warning about NTSC vs. PAL</h3>
  <p>
    Before we begin, a point to keep in mind:
  </p>
  <blockquote style="margin:auto; text-align:center;">
    <span style="font-size: 200%">NTSC and PAL computers do not generate the same colors.</span>
  </blockquote>
  <p>
    This is important due to some rather bad assumptions made in the community resulting in
    misconceptions about NTSC color, particularly due to earlier emulators defaulting to PAL
    and using PAL colors even in NTSC modes. NTSC and PAL colors don't generate the same colors.
    The NTSC palette is generally shifted about a full hue from PAL, and due to differences in
    both the video standards and the computer hardware, it is not possible to adjust a NTSC computer
    to match a PAL computer in palette.
  </p>
  <p>
    Thus, some guidelines when trying to tune colors:
  </p>
  <ul>
    <li>
      <p>There is no One True Palette. Just by video standards alone, there will have to be at least two.</p>
    </li>
    <li>
      <p>
        Always make sure that the emulator and the physical computer match: tune NTSC against NTSC,
        and PAL against PAL.
      </p>
    </li>
    <li>
      <p>
        Be wary of using any screenshots you find online of games as references, since they may have
        been generated using an emulator with inaccurate colors. (Even some old versions of Altirra
        had not so good default palettes.) Screenshots of NTSC games that have sharp pixels and the
        wrong aspect ratio are a telltale sign that they were generated with an emulator and possibly
        with a PAL palette.
      </p>
    </li>
    <li>
      <p>
        Check for multiple versions of even classic games which may differ in colors used, either
        because they were released in and adjusted for different regions, or unofficially modified
        to suit PAL colors. Star Raiders, for instance, has multiple versions
        floating around, one of which uses $72 for the Galactic Chart background and $A8 for the
        "SHIPS" label, while another version uses $90 for the background and $B8 for "TARGETS."
      </p>
    </li>
    <li>
      <p>
        Even physical computers and TVs can vary in adjustment, so matching the emulator against a
        single physical computer does not guarantee accurate color, just realistic color.
      </p>
    </li>
  </ul>
  <h3>Black and white points</h3>
  <p>
    The first step is to tune black and white. Both the TV and the emulator will have brightness and
    contrast controls, where the brightness control determines the black level and the contrast control
    determines how much brighter white is than black. This means that brightness should be adjusted
    first to set the black point, shifting both black and white together, and then contrast adjusted
    to set the white point.
  </p>
  <p>
    Typically, the approach here is to turn up brightness until the black background turns gray, then
    turn it down until it is just black. Similarly, the contrast is then adjusted to make white bright
    without blowing out colors. This is more important on newer LCD TVs that are more prone to distorting
    colors that are too bright for the display to show. If you see oranges turning into nasty yellows,
    the contrast or color setting is too high and needs to be lowered.
  </p>
  <p>
    For NTSC, there is an additional consideration with the brightness. The way that the Atari encodes
    the NTSC signal causes luma 0 to be "blacker than black" due to its signal level being below the
    setup/pedestal level. However, the actual effect on the display varies for many reasons including
    AGC, NTSC-J not using a pedestal, and TVs having adjustments or dynamic adaptation for black level.
    The amount you may need to turn brightness down to match your TV may vary. In Altirra's default
    color preset, the brightness is set to -4% to pull down luma 0 a bit without darkening luma 1 too
    much or overly distorting colors at luma 0.
  </p>
  <h3>Saturation and color</h3>
  <p>
    Before adjusting the colors, the color reproduction settings on the TV or emulator should be checked.
    It is common for some TVs to have a "digital vibrance" or "color enhancement" setting enabled by default.
    Typically this actually means "obscenely oversaturated colors" and should be turned down. "Game mode"
    is a good choice in some TVs as it reduces the amount of image enhancement processing. The color
    rainbow should smooth over most or all of the range without flattening out to primary colors.
  </p>
  <p>
    Most displays will also have a color warmth or color temperature setting to adjust, where "warmer"
    settings produce more red colors while "colder" settings produce bluer colors. Monitors in particular
    are prone to be set way too blue to boost their apparent brightness, with a color temperature setting
    as high as 9300K. Higher-end monitors may have a pre-calibrated sRGB setting, which is ideal when
    used with the emulator.
  </p>
  <p>
    In the emulator, there is a color correction setting that can improve the display of NTSC colors
    by compensating for differences between the NTSC color specification and sRGB.
    This particularly changes mid-hues by shifting blue closer to red, reducing the amount
    of purple in the center. The NTSC to sRGB conversion mode is
    now enabled by default in the default NTSC preset. For PAL
    there is much less of a difference and so the conversion is not enabled by default.
  </p>
  <p>
    The main thing to watch for is the dark red and blue peaks on the left side of the color table, at luma 0 and hues 4/8.
    These should appear to be about the same brightness. If one is noticeably brighter than the other, that
    should be corrected first before proceeding, as otherwise it will make hue tuning difficult: it will be
    hard to keep the text screen blue without turning one of the other colors "sour" in a classic game.
  </p>
  <h3>Hue start</h3>
  <p>
    Next is to adjust the hue 1, shown as the second row from the top on the color table. This hue
    is special because it is the <i>color burst</i> color defined in the NTSC standard and the only
    color not affected by the GTIA color adjustment knob on the bottom of the Atari computer. Adjustments
    to this color shift the entire table and thus it should be adjusted before all the rest of the
    hues.
  </p>
  <p>
    On physical hardware, the hue 1 color is determined by the Tint setting on the TV set. In the
    emulator, this is determined by the <i>Hue Start</i> setting. For modern NTSC, this is defined as
    a light yellowish color sometimes referred to as goldenrod corresponding to an emulator setting
    of -57 degrees, and this is the color that modern TVs will typically generate with their default
    color settings. For older TVs such as the Commodore 1702, though, the default may be more orange,
    with a setting in the -40 to -30 degree range. Altirra's default NTSC palette uses the modern
    NTSC color setting.
  </p>
  <p>
    The PAL standard was designed to avoid color shift problems that required a tint setting on NTSC
    displays, so there is generally more agreement on its base hue. Due to differences between the
    NTSC GTIA and the PAL GTIA, however, the PAL GTIA generates a different hue 1 color than the NTSC
    GTIA. This is normally at -24 degrees, 33 degrees from NTSC.
  </p>
  <p>
    <b>Note:</b> If PAL high artifacting is active in the emulator, the Hue Start setting is ignored
    and locked at -24 degrees.
  </p>
  <h3>Hue step</h3>
  <p>
    Next is adjusting the rest of the colors. On the physical hardware, this is done through the color
    adjustment knob accessible through a small hole at the bottom of the computer. In Altirra, this
    corresponds to the <i>Hue Range</i> setting.
  </p>
  <p>
    On an NTSC computer, the color adjustment knob controls the size of the hue step from hue 1 to
    each successive hue. As a result, hue 2 is affected the least and hue 15 the most. This is the
    trickiest setting to adjust because a small adjustment significantly affects lots of colors and
    it is very easy to detune critical colors in common graphics screens. The color map intentionally
    repeats hue 1 below hue 15 to allow two common settings to be easily targeted:
  </p>
  <ul>
    <li>
      <p>
      <b>Hue 15 continuous with hue 1.</b> Adjust the hue step until hue 15 appears to naturally
      change into hue 1 with the same hue step between the rest of the colors. This matches manuals
      like Atari 400/800 Hardware Manual that describe hue 15 as being yellow, just short of hue 1
      gold. In the emulator, this is a hue step setting of 24 degrees (360 degrees divided by 15 hues).
      </p>
    </li>
    <li>
      <p>
      <b>Hue 15 same as hue 1.</b> Adjust the hue step until hue 15 and hue 1 are the same color.
      This matches manuals like the SALT manual. In the emulator, use 25.7 degrees (360 divided by 14).
      </p>
    </li>
    <li>
      <p>
      <b>Hue 15 overshooting past hue 1 (&gt;25.7 degrees)</b> Adjust the hue step until hue 15 goes <i>beyond</i>
      hue 1, into slight reddish-orange. While not matching official Atari manuals, this is commonly
      seen in actual computers and helps prevent some classic games from displaying "sour" colors.
      In the emulator, this is a hue step setting higher than 25.7 degrees.
      </p>
    </li>
  </ul>
  <p>
    On a PAL computer, this adjustment is a bit different due to some differences in quirks in the
    PAL GTIA, which result in colors varying less between computers but the adjustment knob also acting
    differently. First, on a PAL system, hues 1 and 15 are always the same. This is not an adjustment
    issue, the PAL GTIA chip itself is hardwired to generate the same color for these hues. Any emulator
    palette for PAL that has different hue 1 and 15 colors is wrong. Second, the hue steps generated by
    the PAL GTIA aren't evenly spaced and the delays are generated in different directions for different
    hues. The result is that unlike on an NTSC computer where changing the color adjustment smoothly
    slides the hues, on a PAL system the hues are boxed into several bands and cannot be shifted as far
    as on an NTSC computer. The emulator simulates these quirks when the "Use PAL quirks" option is
    checked, which is enabled in the default preset.
  </p>
  <h3>Artifacting colors</h3>
  <p>
    On physical hardware, the colors generated by artifacting are determined by the circuitry design
    within the computer and the TV set, and there are no separate settings for it other than the ones
    already described. The emulator has artifacting phase and saturation settings, though, to tune
    the emulator to match the computer model, which is the most important factor.
  </p>
  <p>
    For NTSC artifacting, the artifacting section on the left side of the color map utility display
    is used to tune artifacted colors. The top row of colors is used as the main starting point since
    these are the "primary" artifacting colors that show up the most. The exact colors vary for each
    computer since it depends on luma-chroma circuit delays and even the TV, but purple/green
    is the most common pair, with red/blue and green/blue being less common.
  </p>
  <p>
    Once the primary artifacting colors are tuned, the remaining ones can be adjusted. These vary
    not only on the artifacting hue and saturation settings, but also on the main hue settings.
    The artifacting saturation setting is particularly important here and corresponds to the video
    signal strength produced by the computer; 800 have a weak video signal and strongly saturated
    colors, while XEs produce a strong video signal and less saturated colors. This is the hardest
    part of the color palette to tune, so it is best to get everything adjusted as close as possible
    before attempting to tune this part of the artifacting palette.
  </p>
  <h3>Problems with color clamping</h3>
  <p>
    With highly saturated colors, it is possible to run into difficulties with colors being generated
    outside of the RGB cube. When this happens, the colors can't be displayed by the screen and have
    to be clamped in range, distorting the color. This is normal even on the physical hardware,
    but can be a problem with bright colors in the emulator. Areas of the color table "flattening"
    to primaries like red, blue, yellow, and purple are signs that this is happening and that the color
    settings need to be reduced.
  </p>
  <p>
    The Atari 800 deserves special mention here because of its weak video signal, which results in
    its output being overall dimmer but with much more saturated colors than the newer XL/XE models.
    The blue/green artifacting colors, in particular, are prone to being trashed when trying to use
    normal color ranges, causing the deep blue color to be smashed to bright purple. The <i>Intensity
    Scale</i> setting is specifically designed to combat this by darkening the entire palette to
    make room for the deeply saturated colors. The NTSC 800 preset makes use of this, reducing the
    white point to light gray to make room for the artifacting saturation to be turned up.
  </p>
  <h2><a name="contexthelp-gamma-ramp">Gamma ramp issues</a></h2>
  <p>
    Certain applications make use of a video card feature called a <i>gamma ramp</i> to change
    the color settings of a display. These are typically applications that tint the display orange-red
    to reduce blue light at night, such as f.lux or Light Bulb. These programs are generally compatible
    with Altirra but may cause issues if forgotten about when calibrating colors, the blue light
    reduction may vary during the day or cause difficulty in tuning the blue portion of the palette.
  </p>
  <p>
    For these reasons, the Adjust Colors dialog displays a warning if it detects a gamma ramp setting
    that will affect color reproduction. This can be ignored, but it is recommended that the palette
    be tuned with the color tint disabled. One reason is that a normally tuned palette with the orange
    tint applied usually looks better than a night-light tuned palette displayed normally, which will
    be blown out in blue. Another problem is that the color tint may not be enabled
    when the emulator is full-screen. In any case, programs that do night time blue light reduction will
    have a feature in their options to temporarily disable the feature.
  </p>
  <p>
    <b>Note:</b> Altirra will not be able to detect and warn if the tint is coming from either the
    Windows 10 Night Light feature or the video driver's desktop color controls.
  </p>
</topic>
